function convertGameStateIntoPacket({ gameState }) {
  const packetArray = [
    gameState.lastProcessedCommandNumbers.host,
    gameState.lastProcessedCommandNumbers.challenger,
    gameState.orbs.host[0].xPos,
    gameState.orbs.host[0].yPos,
    gameState.orbs.host[0].heading.xPos,
    gameState.orbs.host[0].heading.yPos,
    gameState.orbs.host[0].isGhost,
    gameState.orbs.host[0].isSelected,
    gameState.orbs.host[1].xPos,
    gameState.orbs.host[1].yPos,
    gameState.orbs.host[1].heading.xPos,
    gameState.orbs.host[1].heading.yPos,
    gameState.orbs.host[1].isGhost,
    gameState.orbs.host[1].isSelected,
    gameState.orbs.host[2].xPos,
    gameState.orbs.host[2].yPos,
    gameState.orbs.host[2].heading.xPos,
    gameState.orbs.host[2].heading.yPos,
    gameState.orbs.host[2].isGhost,
    gameState.orbs.host[2].isSelected,
    gameState.orbs.host[3].xPos,
    gameState.orbs.host[3].yPos,
    gameState.orbs.host[3].heading.xPos,
    gameState.orbs.host[3].heading.yPos,
    gameState.orbs.host[3].isGhost,
    gameState.orbs.host[3].isSelected,
    gameState.orbs.host[4].xPos,
    gameState.orbs.host[4].yPos,
    gameState.orbs.host[4].heading.xPos,
    gameState.orbs.host[4].heading.yPos,
    gameState.orbs.host[4].isGhost,
    gameState.orbs.host[4].isSelected,
    gameState.orbs.challenger[0].xPos,
    gameState.orbs.challenger[0].yPos,
    gameState.orbs.challenger[0].heading.xPos,
    gameState.orbs.challenger[0].heading.yPos,
    gameState.orbs.challenger[0].isGhost,
    gameState.orbs.challenger[0].isSelected,
    gameState.orbs.challenger[1].xPos,
    gameState.orbs.challenger[1].yPos,
    gameState.orbs.challenger[1].heading.xPos,
    gameState.orbs.challenger[1].heading.yPos,
    gameState.orbs.challenger[1].isGhost,
    gameState.orbs.challenger[1].isSelected,
    gameState.orbs.challenger[2].xPos,
    gameState.orbs.challenger[2].yPos,
    gameState.orbs.challenger[2].heading.xPos,
    gameState.orbs.challenger[2].heading.yPos,
    gameState.orbs.challenger[2].isGhost,
    gameState.orbs.challenger[2].isSelected,
    gameState.orbs.challenger[3].xPos,
    gameState.orbs.challenger[3].yPos,
    gameState.orbs.challenger[3].heading.xPos,
    gameState.orbs.challenger[3].heading.yPos,
    gameState.orbs.challenger[3].isGhost,
    gameState.orbs.challenger[3].isSelected,
    gameState.orbs.challenger[4].xPos,
    gameState.orbs.challenger[4].yPos,
    gameState.orbs.challenger[4].heading.xPos,
    gameState.orbs.challenger[4].heading.yPos,
    gameState.orbs.challenger[4].isGhost,
    gameState.orbs.challenger[4].isSelected,
    gameState.score.host,
    gameState.score.challenger,
    gameState.score.neededToWin,
    gameState.speed * 10,
  ];
  return new Int32Array(packetArray);
}

module.exports = convertGameStateIntoPacket;
